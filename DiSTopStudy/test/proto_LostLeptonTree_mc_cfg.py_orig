import FWCore.ParameterSet.Config as cms

process = cms.Process("Analysis")

#===================== Message Logger =============================
process.load("FWCore.MessageLogger.MessageLogger_cfi")
process.MessageLogger.categories.append('PATSummaryTables')
process.MessageLogger.cerr.PATSummaryTables = cms.untracked.PSet(
        limit = cms.untracked.int32(10),
            reportEvery = cms.untracked.int32(1)
            )
process.options = cms.untracked.PSet(
        wantSummary = cms.untracked.bool(True)
            )
process.MessageLogger.cerr.FwkReport.reportEvery = 10000


# Check for ny duplicates
#process.source.duplicateCheckMode = cms.untracked.string('noDuplicateCheck')

process.load("Configuration.StandardSequences.Geometry_cff")
process.load("Configuration.StandardSequences.MagneticField_cff")
process.load("Configuration.StandardSequences.FrontierConditions_GlobalTag_cff")
process.load("SimGeneral.HepPDTESSource.pythiapdt_cfi")

runningOnMC = False
process.GlobalTag.globaltag = "START52_V11C::All"
if runningOnMC == False:
    process.GlobalTag.globaltag = "GR_R_52_V9D::All"

process.source = cms.Source("PoolSource",
   fileNames = cms.untracked.vstring(
     "dcap:///pnfs/cms/WAX/11/store/user/lpcsusyhad/dhare/TTJets_TuneZ2star_8TeV-madgraph-tauola/SUSYPAT_76_1_mgR.root"
  )
)

#J process.source = cms.Source("PoolSource", fileNames = cms.untracked.vstring( "file:/uscms/home/javiert/work/CMSSW_5_2_5/src/SusyAnalysis/LostLepton/test/fileList" ))

#J process.maxEvents = cms.untracked.PSet( input = cms.untracked.int32(MAXEVENTS) )

process.source.skipEvents = cms.untracked.uint32(0)  

#=============== configure cleaning sequence ================================
process.load("SandBox.Skims.filterBoolean_cfi")
process.RA2_HBHENoiseFilterRA2    = process.booleanFilter.clone()
process.RA2_HBHENoiseFilterRA2.ResultSource = cms.InputTag("HBHENoiseFilterRA2","HBHENoiseFilterResult","PAT")
process.RA2_beamHaloFilter        = process.booleanFilter.clone()
process.RA2_beamHaloFilter.ResultSource = cms.InputTag("beamHaloFilter")
process.RA2_eeNoiseFilter         = process.booleanFilter.clone()
process.RA2_eeNoiseFilter.ResultSource = cms.InputTag("eeNoiseFilter")
process.RA2_trackingFailureFilter = process.booleanFilter.clone()
process.RA2_trackingFailureFilter.ResultSource = cms.InputTag("trackingFailureFilter")
process.RA2_inconsistentMuons     = process.booleanFilter.clone()
process.RA2_inconsistentMuons.ResultSource = cms.InputTag("inconsistentMuons")
process.RA2_greedyMuons           = process.booleanFilter.clone()
process.RA2_greedyMuons.ResultSource = cms.InputTag("greedyMuons")
process.RA2_EcalTPFilter          = process.booleanFilter.clone()
process.RA2_EcalTPFilter.ResultSource = cms.InputTag("ra2EcalTPFilter")
process.RA2_EcalBEFilter          = process.booleanFilter.clone()
process.RA2_EcalBEFilter.ResultSource = cms.InputTag("ra2EcalBEFilter")
process.HcalLaserEventFilter      = process.booleanFilter.clone()
process.HcalLaserEventFilter.ResultSource = cms.InputTag("hcalLaserEventFilter")
process.EEBadScFilter             = process.booleanFilter.clone()
process.EEBadScFilter.ResultSource = cms.InputTag("eeBadScFilter")

process.cleaningSeq  = cms.Sequence(
    process.RA2_HBHENoiseFilterRA2
  * process.RA2_beamHaloFilter
  * process.RA2_eeNoiseFilter
  * process.RA2_trackingFailureFilter
  * process.RA2_inconsistentMuons
  * process.RA2_greedyMuons
  * process.RA2_EcalTPFilter
  * process.RA2_EcalBEFilter
  #* process.HcalLaserEventFilter
  #* process.EEBadScFilter
)

process.lostLeptonTree = cms.EDAnalyzer("LostLeptonTree",
                                        Debug           = cms.bool    (False),
                                        VertexSource    = cms.InputTag('goodVertices'),
                                        DoPUReweight    = cms.bool    (True),
                                        PUWeigthSource  = cms.InputTag("puWeight"),
                                        PFMetSource     = cms.InputTag("patMETsPF"),
                                        JetAllSource    = cms.InputTag("patJetsPF"),
                                        #bTagName        = cms.string  ("trackCountingHighEffBJetTags"),
                                        bTagName        = cms.string  ("combinedSecondaryVertexBJetTags"),
                                        MHTSource       = cms.InputTag("mhtPFchs"),
                                        HTSource        = cms.InputTag("htPFchs"),
                                        MuonVetoSrc     = cms.InputTag("patMuonsPFIDIso"),
                                        EleVetoSrc      = cms.InputTag("patElectronsIDIso"),
                                        SaveAllMuons    = cms.bool    (True),
                                        MuonSource      = cms.InputTag('patMuonsPF'),
                                        MinMuPt         = cms.double  (5.0),
                                        MaxMuEta        = cms.double  (2.4),
                                        MaxMuD0         = cms.double  (0.2),
                                        MaxMuDz         = cms.double  (0.5),
                                        MaxMuRelIso     = cms.double  (0.20),
                                        PFCandidateSrc  = cms.InputTag("pfNoPileUpIsoPF"),
                                        #ElePFSrc        = cms.InputTag("patElectronsPFIDIso"),
                                        SaveAllElectrons  = cms.bool(True),
                                        ElectronSource    = cms.InputTag('gsfElectrons'),
                                        ConversionsSource = cms.InputTag("allConversions"),
                                        IsoValInputTags   = cms.VInputTag(cms.InputTag('elPFIsoValueCharged03PFIdPFIso'),
                                                                          cms.InputTag('elPFIsoValueGamma03PFIdPFIso'),
                                                                          cms.InputTag('elPFIsoValueNeutral03PFIdPFIso')),
                                        RhoIsoSrcEle      = cms.InputTag("kt6PFJetsForIsolation", "rho"),
                                        BeamSpotSource    = cms.InputTag("offlineBeamSpot"),
                                        MinElePt          = cms.double(5.0)
)

#J process.load('SandBox.Utilities.puWeightProducer_cfi')
#J process.puWeight.PileUpModeForMC = "Summer12_PUS7"
#J process.puWeight.DataPileUpHistFile = "SandBox/Utilities/data/DataPileupHistogram_RA2Summer12_190456-196531_8TeV_PromptReco_WOLowPU_pixelcorr.root"

# an example sequence to create skimmed susypat-tuples
process.analysisSeq = cms.Sequence(
    process.lostLeptonTree
)

##============ configure output module configuration ========================
process.TFileService = cms.Service("TFileService",
                                   fileName = cms.string('outTest.root')
)

#process.load("SandBox.Skims.RA2Selection_cff")
#process.load("SandBox.Skims.RA2HT_cff")
#process.load("SandBox.Skims.RA2MHT_cff")
#process.load("SandBox.Skims.RA2Jets_cff")

#process.preselectionSeq = cms.Sequence(
#    #process.countJetsAK5PFPt50Eta25 *
#    process.htPFFilter *
#    process.mhtPFFilter 
#)    

#process.ppf = cms.Path(process.cleaningSeq * process.puWeight * process.preselectionSeq * process.analysisSeq)
#process.ppf = cms.Path(process.cleaningSeq * process.preselectionSeq * process.analysisSeq)
process.ppf = cms.Path(process.analysisSeq)


###-- Dump config ------------------------------------------------------------
##file = open('SusyPAT_RA2414_cfg.py','w')
##file.write(str(process.dumpPython()))
##file.close()
